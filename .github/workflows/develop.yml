name: 'Deploy EKS Cluster with Terraform'

on:
  push:
    branches:
      - main # Roda o apply quando houver push na main
  pull_request: # Roda apenas o plan para pull requests
  workflow_dispatch: # Permite acionamento manual
    inputs:
      enable_destroy:
        description: 'Marque para habilitar o job de destruição. CUIDADO: Isso deletará todos os recursos.'
        required: true
        type: boolean
        default: false
permissions:
  id-token: write # Permissão para o workflow obter um OIDC token
  contents: read  # Permissão para o workflow ler o repositório

# Garante que apenas uma instância deste workflow seja executada por vez para a mesma branch.
# Se um novo commit for enviado, a execução anterior é cancelada. Isso previne 'state locks'.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    name: 'Terraform Plan/Apply'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: ./terraform # Indica que os comandos devem rodar na pasta terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::239409137076:role/role-eks-fiap # SUBSTITUA
          aws-region: us-east-1 # SUBSTITUA
          audience: sts.amazonaws.com


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=tfplan
        # Se for um PR, o workflow para aqui após o plan.
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false tfplan

  destroy:
    name: 'Terraform Destroy'
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.enable_destroy == 'true'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform # Indica que os comandos devem rodar na pasta terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::239409137076:role/role-eks-fiap
          aws-region: us-east-1
          audience: sts.amazonaws.com
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false
        
