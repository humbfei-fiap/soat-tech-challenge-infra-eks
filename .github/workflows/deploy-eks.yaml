# Nome do Workflow
name: Deploy EKS Cluster com Terraform

# Gatilhos (Triggers)
on:
  push:
    branches:
      - main # Executa quando há um push na branch main
  workflow_dispatch: # Permite execução manual

# Permissões necessárias para autenticação OIDC
permissions:
  id-token: write   # Necessário para obter o token OIDC do GitHub
  contents: read    # Necessário para fazer o checkout do código

jobs:
  # Job para planejar e aplicar as mudanças do Terraform
  terraform-deploy:
    name: Terraform Deploy EKS
    runs-on: ubuntu-latest # Runner que executará o job

    steps:
      # 1. Checkout do Código
      - name: Checkout do repositório
        uses: actions/checkout@v4

      # 2. Configurar Autenticação AWS com OIDC
      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GitHubActions-EKS-Deploy-Role # <-- SUBSTITUA PELO ARN DO SEU ROLE
          aws-region: us-east-1 # <-- SUBSTITUA PELA SUA REGIÃO

      # 3. Setup do Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0 # Especifique a versão do Terraform

      # 4. Terraform Init
      - name: Terraform Init
        id: init
        run: terraform -chdir=./terraform init

      # 5. Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform -chdir=./terraform plan -no-color

      # 6. Terraform Apply (Apenas na branch 'main')
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' # Condição para aplicar apenas na branch principal
        run: terraform -chdir=./terraform apply -auto-approve